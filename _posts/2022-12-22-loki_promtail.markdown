---
layout: single
title:  "An untapped data source: Loki and Promtail (under construction)"
date:   2022-12-22 08:00:00
comments: true
categories: Loki, Promtail, Grafana, data, log
---

## Motivation

For years, I have been using numerous different databases on an almost daily basis. Oracle, PostgreSQL, MariaDB,
InfluxDB, etc.. etc.. I enjoy the challenge of writing complex queries and discovering patterns or trends in the results. 
I believe that most individuals in a business setting should be familiar with SQL (though this is far from reality). 
I am also well aware that databases are not the only place that data can be extracted. Some other data sources include:

1. Web scraping
2. Flat files (excel, csv, json)
3. Logs

I am familiar wth all the sources names in this list with the exception of logs. Have I looked at or seen logs? Of course
I have. I still refer to my *dmesg* log if I have a file system or device mounting issue. I have used numerous
apache/httpd logs to troubleshoot *WSGI* applications. But, both of these cases have never merited me learning to use something
like a log aggregator. Until now. For the first time in my professional career, I have found the need to extract log data
which is not available anywhere else except in a mountain of logs. More specifically, logs generated by automation systems.
Since I have read about various solutions for successfully analyzing log data in the past, I have decided to use this
opportunity to test drive some of these solutions. I will not be using the automation logs already mentioned above
for this post, but I will be using various sytems logs to better understand the tooling and log aggregate capabilities
in general.

## Grafana Loki

### Sample Loki configuration file

```yaml
auth_enabled: false

server:
  http_listen_port: 3100
  grpc_listen_port: 9096

common:
  path_prefix: /tmp/loki
  storage:
    filesystem:
      chunks_directory: /tmp/loki/chunks
      rules_directory: /tmp/loki/rules
  replication_factor: 1
  ring:
    instance_addr: 127.0.0.1
    kvstore:
      store: inmemory

schema_config:
  configs:
    - from: 2020-10-24
      store: boltdb-shipper
      object_store: filesystem
      schema: v11
      index:
        prefix: index_
        period: 24h

limits_config:
  max_query_length: 0h

query_scheduler:
  max_outstanding_requests_per_tenant: 4096

frontend:
  max_outstanding_per_tenant: 4096

ruler:
  alertmanager_url: http://localhost:9093

analytics:
  reporting_enabled: false
```

### Grafana log panel output: apache2 access.log

<img src="/assets/loki_grafana_log_panel.png" alt="drawing" style="max-width: 100%; height: auto; text-align: center;"/>

(POST CURRENTLY UNDER CONSTRUCTION AND NOT COMPLETE)
